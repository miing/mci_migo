###################
# Generic         #
###################
[__noschema__]
basedir = /home/www-data/%(hostname)s/%(environment)s
debug = false
locale_basedir = %(basedir)s/identityprovider
domain = miing.org
hostname = login.%(domain)s
# environment is eaxactly one of three types (devel|staging|production)
# Note that if production is chosen, then leave it blank
environment =
db_engine = identityprovider.backend
db_host = localhost
db_name = identityprovider
db_password =
db_port =
db_user = postgres


###################
# Django Settings #
###################
[django]
# Core #
debug = false
template_debug = %(debug)s
# Admins is a 2-item-tuple list
admins =
managers = %(admins)s
time_zone = UTC
language_code = en
locale_paths = %(locale_basedir)s/locale
server_email = noreply@%(domain)s
databases = django_databases
# Host for sending e-mail
email_host = 'localhost'
email_port = 25
email_host_user = ''
email_host_password = ''
email_use_tls = False
installed_apps =
    adminaudit
    api
    django.contrib.auth
    django.contrib.contenttypes
    django.contrib.messages
    django.contrib.sessions
    django.contrib.sites
    django.contrib.admin
    django_openid_auth
    django_configglue
    django_statsd
    djangosecure
    gargoyle
    identityprovider
    nexus
    oauth_backend
    pgtools
    preflight
    raven.contrib.django
    saml2idp
    south
    saml2sso
    webui
template_dirs =
    %(basedir)s/api/templates
    %(basedir)s/identityprovider/templates
    %(basedir)s/webui/templates
template_loaders =
    identityprovider.template_loaders.brand.Loader
    django.template.loaders.filesystem.Loader
    django.template.loaders.app_directories.Loader
template_context_processors =
    django.contrib.messages.context_processors.messages
    django.contrib.auth.context_processors.auth
    django.core.context_processors.i18n
    django.core.context_processors.media
    django.core.context_processors.static
    identityprovider.context_processors.debug
    identityprovider.context_processors.readonly
    identityprovider.context_processors.i18n
    django.core.context_processors.request
    identityprovider.context_processors.detect_embedded
    identityprovider.context_processors.google_analytics_id
    identityprovider.context_processors.current_date
    identityprovider.context_processors.branding
email_subject_prefix =
secret_key =
static_root = media
static_url = /assets/identityprovider/
# Middleware #
middleware_classes =
    django_statsd.middleware.GraphiteRequestTimingMiddleware
    django_statsd.middleware.GraphiteMiddleware
    raven.contrib.django.middleware.SentryResponseErrorIdMiddleware
    identityprovider.middleware.timer.TimerMiddleware
    djangosecure.middleware.SecurityMiddleware
    identityprovider.middleware.dbfailover.DBFailoverMiddleware
    django.middleware.common.CommonMiddleware
    django.contrib.sessions.middleware.SessionMiddleware
    django.contrib.messages.middleware.MessageMiddleware
    django.middleware.csrf.CsrfViewMiddleware
    django.contrib.auth.middleware.AuthenticationMiddleware
    identityprovider.middleware.useraccount.UserAccountConversionMiddleware
    django.middleware.locale.LocaleMiddleware
    identityprovider.middleware.exception.LogExceptionMiddleware
    raven.contrib.django.middleware.Sentry404CatchMiddleware
#    identityprovider.middleware.profile.ProfileMiddleware
# Sessions #
session_cookie_secure = true
session_engine = django.contrib.sessions.backends.db
# Cache #
caches = django_caches
# Authentication #
authentication_backends =
    identityprovider.auth.LaunchpadBackend
    django.contrib.auth.backends.ModelBackend
    django_openid_auth.auth.OpenIDBackend
login_url = /+login
login_redirect_url = /
# CSRF #
csrf_failure_view = identityprovider.views.csrf.csrf_failure
# Logging #
logging = django_logging
# Testing #
# Static files #
admin_media_prefix = /media/

[django_secure]
secure_ssl_redirect = false
secure_frame_deny = false


###################
# SSO Settings    #
###################
[__main__]
db_statement_timeout_millis = 10000
extra_pythonpath = %(basedir)s
oops_dir = %(basedir)s/oopses
pgconnect_timeout = 10
serve_static_media = False
google_analytics_id = UA-1018242-24
includes =

[api]
api_host = https://%(hostname)s
api_url = /api/v2
oauth_data_store = identityprovider.store.SSODataStore

[branding]
brand = miing
brand_descriptions = brand_descriptions

[captcha]
captcha_api_url = http://api.recaptcha.net
captcha_api_url_secure = https://www.google.com/recaptcha/api
captcha_image_url_pattern = https://www.google.com/recaptcha/api/image?c=%s
captcha_private_key = captcha-private-key
# captcha proxies is a 2-item-tuple list
captcha_proxies = captcha_proxies
captcha_public_key = captcha-public-key
# direct internet connection
captcha_use_proxy = true
captcha_verify_url = http://api-verify.recaptcha.net/verify
disable_captcha_verification = False

[debug]
openid_debug = %(debug)s
testing = %(debug)s

[email]
feedback_to_address = feedback@%(domain)s
noreply_from_address = noreply@%(domain)s

[i18n]
language_names = language_names
supported_languages =
    en
    es
    pl
    de
    zh-cn
    pt-br
    ru
    fr

[nexus]
nexus_media_prefix = /admin/media/

[openid]
openid_create_users = true
# openid_preauthorization_acl is a 2-item-tuple list
openid_preauthorization_acl =
openid_sreg_extra_fields = language
openid_sso_server_url = https://%(hostname)s/
openid_update_details_from_sreg = true
pre_authorization_validity = 2
# force openid trust_root, as django_openid_auth will otherwise send an empty value
openid_trust_root = https://%(hostname)s/

[preflight]
preflight_base_template = base.html

[raven]
sentry_processors =
    identityprovider.processors.SanitizePasswordsProcessor
    identityprovider.processors.RemoveStackLocalsProcessor
    identityprovider.processors.RemovePostDataProcessor
    identityprovider.processors.RemoveUserDataProcessor
    identityprovider.processors.SanitizeCookiesProcessor
    identityprovider.processors.SanitizeSecretsProcessor

[readonly]
app_servers =
dbfailover_attempts = 3
dbfailover_flag_dir = %(basedir)s/readonly
dbrecover_attempts = 10
dbrecover_interval = 15
dbrecover_multiplier = 2
readonly_secret = secret

[sso]
embedded_trust_root =
sso_account_update_url = None
sso_media_root = media
sso_provider_url = https://%(hostname)s/+openid
sso_restrict_rp = false
sso_root_url = https://%(hostname)s/

[south]
south_database_adapters = {"default": "south.db.postgresql_psycopg2"}

[static_urls]
support_form_url = https://forms.canonical.com/sso-support/
twofactor_faq_url = https://help.ubuntu.com/community/SSO/FAQs/2FA
yubikey_personalize_url = http://www.yubico.com/personalization-tool
apps_url = https://apps.ubuntu.com/
photos_url = https://one.ubuntu.com/photos/
music_url = https://one.ubuntu.com/music/
cloud_url = https://one.ubuntu.com/files/

[twofactor]
hotp_drift = 3
hotp_backwards_drift=0
twofactor_max_attempts=18
twofactor_paper_codes=25
twofactor_paper_codes_allow_generation=%(twofactor_paper_codes)s

[statsd]
statsd_prefix = as.statsd.sso

[django_statsd]
statsd_patches =
    django_statsd.patches.db
    django_statsd.patches.cache

[saml2]
saml2idp_config = saml2idp_config
saml2idp_remotes = saml2idp_remotes

[saml2idp_config]
autosubmit = true
issuer = https://%(hostname)s
signing = true
# If signing = true, you will need to specify these values:
#certificate_file = /PATH/TO/certificate.pem
#private_key_file = /PATH/TO/key.pem

[saml2idp_remotes]
salesforce = saml2idp_salesforce
google_apps = saml2idp_googleapps

[saml2idp_salesforce]
acs_url = https://login.salesforce.com
processor = saml2sso.processors.SalesForceProcessor

[saml2idp_googleapps]
acs_url = https://www.google.com/a/login.ubuntu.com/acs
processor = saml2sso.processors.GoogleAppsProcessor


###################
# Helper    	  #
###################
[django_databases]
default = db_default

[db_default]
engine = %(db_engine)s
host = %(db_host)s
name = %(db_name)s
password = %(db_password)s
port = %(db_port)s
user = %(db_user)s

[django_caches]
default = cache_default

[cache_default]
backend = django.core.cache.backends.memcached.MemcachedCache
location = 127.0.0.1:11211

[django_logging]
version = 1
disable_existing_loggers = false
handlers = django_handlers
loggers = django_loggers
formatters = django_formatters
root = logger_root

[django_handlers]
file = handler_file
sentry = handler_sentry

[django_loggers]
django = logger_django
sso = logger_sso

[django_formatters]
simple = formatter_simple

[logger_root]
handlers =
    file
    sentry
level = WARNING

[handler_file]
class = logging.FileHandler
level = INFO
filename = %(basedir)s/sso.log
formatter = simple

[handler_sentry]
level = ERROR
class = raven.contrib.django.handlers.SentryHandler

[logger_django]
handlers = file
propagate = false
level = INFO

[logger_sso]
handlers = file
propagate = false
level = INFO

[formatter_simple]
format =%%(asctime)s %%(levelname)s %%(message)s

[brand_descriptions]
ubuntu = Ubuntu Single Sign On
launchpad = Launchpad Login Service
ubuntuone = Ubuntu One
miing = Miing Single Sign On

[captcha_proxies]
http = http://squid.internal:3128/
https = https://squid.internal:3128/

[language_names]
es = Español
es-ar = Español de Argentina
en = English
hu = Magyar
zh-cn = 简体中文
pl = Polski
de = Deutsch
pt-br = Português do Brasil
ru = Русский
fr = Français
